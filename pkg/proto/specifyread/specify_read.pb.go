// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.0
// source: specify_read.proto

package specifyread

import (
	sdkws "github.com/OpenIMSDK/protocol/sdkws"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SetConversationForUserAndSeqReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID string `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	UserID         string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	Seq            int64  `protobuf:"varint,3,opt,name=seq,proto3" json:"seq,omitempty"`
}

func (x *SetConversationForUserAndSeqReq) Reset() {
	*x = SetConversationForUserAndSeqReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_specify_read_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetConversationForUserAndSeqReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConversationForUserAndSeqReq) ProtoMessage() {}

func (x *SetConversationForUserAndSeqReq) ProtoReflect() protoreflect.Message {
	mi := &file_specify_read_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConversationForUserAndSeqReq.ProtoReflect.Descriptor instead.
func (*SetConversationForUserAndSeqReq) Descriptor() ([]byte, []int) {
	return file_specify_read_proto_rawDescGZIP(), []int{0}
}

func (x *SetConversationForUserAndSeqReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *SetConversationForUserAndSeqReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SetConversationForUserAndSeqReq) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

type SetConversationForUserAndSeqResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetConversationForUserAndSeqResp) Reset() {
	*x = SetConversationForUserAndSeqResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_specify_read_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetConversationForUserAndSeqResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConversationForUserAndSeqResp) ProtoMessage() {}

func (x *SetConversationForUserAndSeqResp) ProtoReflect() protoreflect.Message {
	mi := &file_specify_read_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConversationForUserAndSeqResp.ProtoReflect.Descriptor instead.
func (*SetConversationForUserAndSeqResp) Descriptor() ([]byte, []int) {
	return file_specify_read_proto_rawDescGZIP(), []int{1}
}

type MarkUserReadMsgTip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID string         `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	UserID         string         `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	Seq            int64          `protobuf:"varint,3,opt,name=seq,proto3" json:"seq,omitempty"`
	MsgData        *sdkws.MsgData `protobuf:"bytes,4,opt,name=msgData,proto3" json:"msgData,omitempty"`
}

func (x *MarkUserReadMsgTip) Reset() {
	*x = MarkUserReadMsgTip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_specify_read_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkUserReadMsgTip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkUserReadMsgTip) ProtoMessage() {}

func (x *MarkUserReadMsgTip) ProtoReflect() protoreflect.Message {
	mi := &file_specify_read_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkUserReadMsgTip.ProtoReflect.Descriptor instead.
func (*MarkUserReadMsgTip) Descriptor() ([]byte, []int) {
	return file_specify_read_proto_rawDescGZIP(), []int{2}
}

func (x *MarkUserReadMsgTip) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *MarkUserReadMsgTip) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *MarkUserReadMsgTip) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *MarkUserReadMsgTip) GetMsgData() *sdkws.MsgData {
	if x != nil {
		return x.MsgData
	}
	return nil
}

var File_specify_read_proto protoreflect.FileDescriptor

var file_specify_read_proto_rawDesc = []byte{
	0x0a, 0x12, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x79, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x79, 0x72, 0x65, 0x61, 0x64, 0x1a, 0x11,
	0x73, 0x64, 0x6b, 0x77, 0x73, 0x2f, 0x73, 0x64, 0x6b, 0x77, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x73, 0x0a, 0x1f, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x53, 0x65,
	0x71, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x73, 0x65, 0x71, 0x22, 0x22, 0x0a, 0x20, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x6e, 0x64, 0x53, 0x65, 0x71, 0x52, 0x65, 0x73, 0x70, 0x22, 0x9d, 0x01, 0x0a, 0x12, 0x4d,
	0x61, 0x72, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x73, 0x67, 0x54, 0x69,
	0x70, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x73, 0x65, 0x71, 0x12, 0x35, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x73, 0x64, 0x6b, 0x77, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53,
	0x44, 0x4b, 0x2f, 0x4f, 0x70, 0x65, 0x6e, 0x2d, 0x49, 0x4d, 0x2d, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x79, 0x72, 0x65, 0x61, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_specify_read_proto_rawDescOnce sync.Once
	file_specify_read_proto_rawDescData = file_specify_read_proto_rawDesc
)

func file_specify_read_proto_rawDescGZIP() []byte {
	file_specify_read_proto_rawDescOnce.Do(func() {
		file_specify_read_proto_rawDescData = protoimpl.X.CompressGZIP(file_specify_read_proto_rawDescData)
	})
	return file_specify_read_proto_rawDescData
}

var file_specify_read_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_specify_read_proto_goTypes = []interface{}{
	(*SetConversationForUserAndSeqReq)(nil),  // 0: OpenIMServer.specifyread.SetConversationForUserAndSeqReq
	(*SetConversationForUserAndSeqResp)(nil), // 1: OpenIMServer.specifyread.SetConversationForUserAndSeqResp
	(*MarkUserReadMsgTip)(nil),               // 2: OpenIMServer.specifyread.MarkUserReadMsgTip
	(*sdkws.MsgData)(nil),                    // 3: OpenIMServer.sdkws.MsgData
}
var file_specify_read_proto_depIdxs = []int32{
	3, // 0: OpenIMServer.specifyread.MarkUserReadMsgTip.msgData:type_name -> OpenIMServer.sdkws.MsgData
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_specify_read_proto_init() }
func file_specify_read_proto_init() {
	if File_specify_read_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_specify_read_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetConversationForUserAndSeqReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_specify_read_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetConversationForUserAndSeqResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_specify_read_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkUserReadMsgTip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_specify_read_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_specify_read_proto_goTypes,
		DependencyIndexes: file_specify_read_proto_depIdxs,
		MessageInfos:      file_specify_read_proto_msgTypes,
	}.Build()
	File_specify_read_proto = out.File
	file_specify_read_proto_rawDesc = nil
	file_specify_read_proto_goTypes = nil
	file_specify_read_proto_depIdxs = nil
}
